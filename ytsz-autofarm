local getgenv = getgenv()

local VIM = game:GetService("VirtualInputManager")
local Players = game:GetService("Players")

local Player = Players.LocalPlayer
local Character = Player.Character
local HRP = Character.PrimaryPart
local Humanoid = Character:FindFirstChildWhichIsA("Humanoid")

local PlayerGui = Player.PlayerGui
local ComputerGui = PlayerGui:WaitForChild("Computer")

local Studio = game:GetService("Workspace"):WaitForChild("Studio")
local StudioItems = Studio:WaitForChild("Items")
local Houses = game:GetService("Workspace"):WaitForChild("Houses")

local set_identity = (type(syn) == 'table' and syn.set_thread_identity) or setidentity or setthreadcontext

local thumbnailName
local length = math.random(5,10)
local array = {}
for i = 1, length do
	array[i] = string.char(math.random(65, 90))
end
thumbnailName = table.concat(array)

local videoName
length = math.random(5,10)
array = {}
for i = 1, length do
	array[i] = string.char(math.random(65, 90))
end
videoName = table.concat(array)

local autoFarmName
length = math.random(5,10)
array = {}
for i = 1, length do
	array[i] = string.char(math.random(65, 90))
end
autoFarmName = table.concat(array)

getgenv[autoFarmName] = false

--// Functions
local function generateThumbnail()
	game:GetService("ReplicatedStorage").Remotes.Events.ThumbnailStart:FireServer()
	task.wait()
	game:GetService("ReplicatedStorage").Remotes.Events.ThumbnailEnd:FireServer({["Color"] = tonumber(string.format("%.3f", math.random(100,600)*.001)), ["Pic"] = math.random(2, 7), ["Pose"] = math.random(3, 4), ["Arrow"] = math.random(1, 4)}, thumbnailName)
end

local function checkIfNoFootage()
	if PlayerGui.MainMenu.C.C.UIGradient.Offset.X < 0.49 then
		if StudioItems:FindFirstChildWhichIsA("Seat", true) then
			task.wait(1)
			Humanoid:ChangeState("Jumping")
			task.wait(1)
			if StudioItems:FindFirstChildWhichIsA("Seat", true) then
				repeat
                    if StudioItems:FindFirstChild("Shop Teleporter") then
                        game.Players.LocalPlayer.Character:PivotTo(StudioItems:FindFirstChild("Shop Teleporter"):GetPivot() * CFrame.new(0, 7, 0))
                        task.wait(.5)
                    else
                        if Studio:FindFirstChild("Door") then
                            HRP.CFrame = Studio.Door.W.CFrame
                        end
                    end
					task.wait(0.1)
				until not StudioItems:FindFirstChildWhichIsA("Seat", true) or not getgenv[autoFarmName]
			end
		end
		if not Character:FindFirstChild("Handle") then
			repeat
				if set_identity then
					set_identity(2)
					require(game.ReplicatedStorage.Modules.Float).new(PlayerGui.Camera.LocalScript.Parent.Fr.ImageButton):Click()
					task.wait(0.1)
				else
					local CameraButton = PlayerGui.Camera.LocalScript.Parent.Fr.ImageButton
					VIM:SendMouseButtonEvent(CameraButton.AbsolutePosition.X+CameraButton.AbsoluteSize.X/2,CameraButton.AbsolutePosition.Y+50,0,true,CameraButton,1)
					VIM:SendMouseButtonEvent(CameraButton.AbsolutePosition.X+CameraButton.AbsoluteSize.X/2,CameraButton.AbsolutePosition.Y+50,0,false,CameraButton,1)
					task.wait(0.1)
				end
			until Character:FindFirstChild("Handle") or not getgenv[autoFarmName]
		end
		task.wait()
		repeat
			if set_identity then
				set_identity(7)
			end
			task.wait()
			VIM:SendKeyEvent(true, Enum.KeyCode.E, false, nil)
			task.wait()
			generateThumbnail()
			task.wait()
			VIM:SendKeyEvent(false, Enum.KeyCode.E, false, nil)
			task.wait()
		until PlayerGui.MainMenu.C.C.UIGradient.Offset.X >= 0.49 or not getgenv[autoFarmName]
	end
end

local function enterHouse()
	if not StudioItems:FindFirstChildWhichIsA("Seat", true) and getgenv[autoFarmName] then
		generateThumbnail()
		task.wait()
		repeat
			game.ReplicatedStorage.Events._EnterHouse:Fire()
			task.wait(1)
			Humanoid:ChangeState("Jumping")
			task.wait(0.1)
		until StudioItems:FindFirstChildWhichIsA("Seat", true) or not getgenv[autoFarmName]
	end
end

local function sitDown()
	if getgenv[autoFarmName] then
		local Seat = StudioItems:FindFirstChildWhichIsA("Seat", true)
		if Seat and Humanoid.Sit == false then
			local Chair = Seat:FindFirstAncestorWhichIsA("Model")
			for _, ChairInstance in ipairs(Chair:GetDescendants()) do
				if getgenv[autoFarmName] and ChairInstance:IsA("BasePart") then
					ChairInstance.CanCollide = false
				end
			end
			if set_identity then
				local replaceWithBest = nil
				for _, v in ipairs(PlayerGui:GetChildren()) do
					if getgenv[autoFarmName] and v:IsA("BillboardGui") and v.Enabled == true and v.Name == "BillboardGui" and v:FindFirstChild("Frame") and v.Frame.Size == UDim2.new(1, 0, 1, 0) and v.Frame:FindFirstChild("ImageButton") and v.Frame.ImageButton:FindFirstChild("TextLabel") and string.lower(v.Frame.ImageButton.TextLabel.Text):match("replace with best") then
						replaceWithBest = v.Frame.ImageButton
					end
				end

				if replaceWithBest ~= nil then
					set_identity(2)
					require(game.ReplicatedStorage.Modules.Float).new(replaceWithBest):Click()
				end
			end
			repeat
				HRP.CFrame = CFrame.new(Seat.Position)
				task.wait(1)
				HRP.Velocity = Vector3.new(50, 50, 50)
				task.wait(1)
				HRP.Velocity = Vector3.new(-50, 50, -50)
				task.wait(1)
			until Humanoid.Sit == true or not getgenv[autoFarmName]
			for _, ChairInstance in ipairs(Chair:GetDescendants()) do
				if getgenv[autoFarmName] and ChairInstance:IsA("BasePart") then
					ChairInstance.CanCollide = true
				end
			end
		end
	end
end

local function editVideo()
	if getgenv[autoFarmName] then
		local editingVideoGui
		if not PlayerGui:FindFirstChild("editingVideoGui") then
			editingVideoGui = Instance.new("ScreenGui", PlayerGui)
			editingVideoGui.Name = "editingVideoGui"
		else
			editingVideoGui = PlayerGui:FindFirstChild("editingVideoGui")
		end
		local editingVideoTL = Instance.new("TextLabel", editingVideoGui)
		editingVideoTL.Size = UDim2.new(0.25, 0, 0.075, 0)
		editingVideoTL.AnchorPoint = Vector2.new(0.5, 0.5)
		editingVideoTL.Position = UDim2.new(0.5, 0, 0.8, 0)
		editingVideoTL.TextScaled = true
		editingVideoTL.BackgroundTransparency = 0.5
		editingVideoTL.BorderSizePixel = 0
		editingVideoTL.Text = "Editing video."
		game:GetService("ReplicatedStorage").Remotes.Functions.BeginVIdeo:InvokeServer()
		task.wait(.1)
		local video = game.ReplicatedStorage.Remotes.Functions.BeginVIdeo:InvokeServer()
		local videoLength = 0
		if set_identity then
			set_identity(2)
		end
		local currentComptuer = require(game.ReplicatedStorage.Modules.Computers)[require(game.ReplicatedStorage.Modules.CurrentComputer).Computer]
		local currentComputerSDPer = require(game.ReplicatedStorage.Modules.Formula).SDPerComputer(currentComptuer)
		local SDnumber = game:GetService("ReplicatedStorage").Remotes.Functions.GetMoneyMode:InvokeServer()
		local SDname = SDnumber == 1 and "SD" or "SD" .. tostring(SDnumber)
		local SDestimation = Player[SDname].Value
		if videoLength < math.ceil(SDestimation / currentComputerSDPer) then
			repeat
				videoLength = videoLength + 1
			until videoLength >= math.ceil(SDestimation / currentComputerSDPer)
		end
		local extends = {}
		local originalExtend
		if tostring((math.floor(videoLength/20))) ~= "0" then
			editingVideoTL.Text = "Editing video. Progress: 0/" .. tostring((math.floor(videoLength/20)))
		else
			editingVideoTL.Text = "Editing video. Progress: 0/1"
		end
		if videoLength >= 20 then
			originalExtend = game.ReplicatedStorage.Remotes.Functions.ExtendVideo:InvokeServer(video)
			table.insert(extends, originalExtend)
		end
		editingVideoTL.Text = "Editing video. Progress: 1/" .. tostring((math.floor(videoLength/20)))
		if videoLength >= 40 then
			for extend = 0, (math.floor(videoLength/20) - 1) do
				if getgenv[autoFarmName] then
					table.insert(extends, game.ReplicatedStorage.Remotes.Functions.ExtendVideo:InvokeServer(video, extends[#extends]))
					task.wait()
					editingVideoTL.Text = "Editing video. Progress: " .. tostring(extend + 1) .. "/" .. tostring((math.floor(videoLength/20)))
				end
			end
		end
		if tostring((math.floor(videoLength/20))) ~= "0" then
			editingVideoTL.Text = "Editing video. Progress: " .. tostring((math.floor(videoLength/20))) .. "/" .. tostring((math.floor(videoLength/20)))
		else
			editingVideoTL.Text = "Editing video. Progress: 1/1"
		end
		game.ReplicatedStorage.Remotes.Events.Export:FireServer(extends, video, videoLength, videoName)
	end
end

--// Main Loop
task.spawn(function()
	while task.wait() do
		if getgenv[autoFarmName] then
			checkIfNoFootage()
			task.wait()
			enterHouse()
			task.wait()
			if ComputerGui.Frame.Visible == false and getgenv[autoFarmName] then
				repeat
					task.wait(1)
					Humanoid:ChangeState("Jumping")
					task.wait(1)
					sitDown()
					task.wait(.5)
				until ComputerGui.Frame.Visible == true or not getgenv[autoFarmName]
			end
			if ComputerGui.Frame.Visible == true and getgenv[autoFarmName] then
				task.wait()
				editVideo()
				task.wait()
				game:GetService("ReplicatedStorage").Remotes.Events.Upload:FireServer(videoName, thumbnailName, videoName)
				task.wait(1)
				if PlayerGui:FindFirstChild("editingVideoGui") then
					PlayerGui:FindFirstChild("editingVideoGui"):Destroy()
				end
			end
		end
	end
end)

--// UI
task.spawn(function()
	getgenv[autoFarmName] = false
	local repo = 'https://raw.githubusercontent.com/wally-rblx/LinoriaLib/main/'

	local Library = loadstring(game:HttpGet(repo .. 'Library.lua'))()

	local Window = Library:CreateWindow({
		Title = 'YouTube Simulator Z AutoFarm [discord.gg/hSm6DyF6X7]',
		Center = true, 
		AutoShow = true,
	})

	local Tabs = {
		Main = Window:AddTab('Main'),
	}

	local LeftGroupBox = Tabs.Main:AddLeftGroupbox('Credits: Goose Better#9356')

	LeftGroupBox:AddLabel('Discord Server (Report Bugs):')
	LeftGroupBox:AddLabel('discord.gg/hSm6DyF6X7')
	LeftGroupBox:AddToggle('autoYTSZFarm', {
		Text = 'YouTube Simulator Z AutoFarm',
		Default = false,
		Tooltip = 'Enable or disable the autofarm',
	})
	local firstChangeHappened = false

	Toggles.autoYTSZFarm:OnChanged(function()
		if firstChangeHappened then
			if set_identity then
				set_identity(7)
			end
			if require(game.ReplicatedStorage.Modules.OPOP).PEE == nil then
				local clamScript = game:GetService("Players").LocalPlayer.PlayerGui:WaitForChild("NewBideo"):WaitForChild("LocalScript")
				local clam = clamScript.CLAM:Clone()
				clam.N.Text = ""
				require(game.ReplicatedStorage.Modules.OPOP).PEE = clam
				require(game.ReplicatedStorage.Modules.OPOP).COPY = nil
				require(game.ReplicatedStorage.Modules.OPOP).COPY = (function()
					local clam = clamScript.CLAM:Clone()
					clam.N.Text = ""
				end)
			end
			getgenv[autoFarmName] = Toggles.autoYTSZFarm.Value
			Library:Notify(getgenv[autoFarmName] == true and 'YouTube Simulator Z AutoFarm enabled!' or 'YouTube Simulator Z AutoFarm disabled!', 2)
		end
		firstChangeHappened = true
	end)

	for i = 0, 3 do 
		LeftGroupBox:AddLabel('\n\ ')
	end

	LeftGroupBox:AddButton('Unload', function() Library:Unload() end)
	Library:OnUnload(function()
		print('Unloaded!')
		getgenv[autoFarmName] = false
		if PlayerGui:FindFirstChild("editingVideoGui") then
			PlayerGui:FindFirstChild("editingVideoGui"):Destroy()
		end
		Library.Unloaded = true
	end)
end)
