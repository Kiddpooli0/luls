if game.PlaceId == 8542275097 or game.PlaceId == 8592115909 then
	repeat
		wait()
	until game:IsLoaded() and game.Players.LocalPlayer and game.Players.LocalPlayer.Character
else
	return
end
game:GetService("StarterGui"):SetCoreGuiEnabled(Enum.CoreGuiType.PlayerList, true)
local queueonteleport = queue_on_teleport or syn.queue_on_teleport
local localPlayer = game.Players.LocalPlayer
local tweenService = game:GetService("TweenService")
local autoWinVersion = "0.7c - 7/4"

local skywars = {}

local Flamework = require(game:GetService("ReplicatedStorage")["rbxts_include"]["node_modules"]["@flamework"].core.out).Flamework
repeat task.wait() until Flamework.isInitialized
local controllers = {}
local controllerids = {}
local eventnames = {}
for i,v in pairs(debug.getupvalue(Flamework.Testing.patchDependency, 1).idToObj) do
	controllers[tostring(v)] = v
	controllerids[tostring(v)] = i 
	local controllerevents = {}
	for i2,v2 in pairs(v) do
		if type(v2) == "function" then
			local eventsfound = {}
			for i3,v3 in pairs(debug.getconstants(v2)) do
				if tostring(v3):find("-") == 9 then
					table.insert(eventsfound, tostring(v3))
				end
			end
			if #eventsfound > 0 then
				controllerevents[i2] = eventsfound
			end
		end
	end
	eventnames[tostring(v)] = controllerevents
end
local Events = require(game:GetService("ReplicatedStorage").TS.events).GlobalEvents.client
skywars = {
	["EventHandler"] = Events,
	["Events"] = eventnames,
	["BlockFunctionHandler"] = require(game.Players.LocalPlayer.PlayerScripts.TS.events).Functions,
	["inventoryController"] = require(game.Players.LocalPlayer.PlayerScripts.TS.controllers["inventory-controller"]),
	["HotbarController"] = controllers["HotbarController"],
	--["ReplicaHandler"] = require(lplr.PlayerScripts.TS.replicas).Replicas,
	["BlockUtil"] = require(game:GetService("ReplicatedStorage").TS.util["block-util"]).BlockUtil,
	["ScreenController"] = controllers["ScreenController"],
	["MeleeController"] = Flamework.resolveDependency(controllerids["MeleeController"]),
	["ItemTable"] = require(game:GetService("ReplicatedStorage").TS.item.item).Items,
	["HealthController"] = Flamework.resolveDependency(controllerids["HealthController"])
}
local f = Instance.new("ScreenGui")
f.Name = "?"
f.ResetOnSpawn = false
f.Parent = game:GetService("CoreGui")
local function g(h, i)
	local j = i or 3
	coroutine.wrap(
		function()
			local k = Instance.new("TextLabel")
			k.Parent = f
			k.AnchorPoint = Vector2.new(0.5, 0.5)
			k.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			k.BorderSizePixel = 0
			k.Position = UDim2.new(0.5, 0, 0.800000012, 0)
			k.Size = UDim2.new(0, 0, 0, 30)
			k.Font = Enum.Font.SourceSansLight
			k.TextColor3 = Color3.fromRGB(0, 0, 0)
			k.TextSize = 20.000
			for l = 1, #h + 1 do
				local m = game:GetService("TextService"):GetTextSize(h:sub(1, l),20,Enum.Font.SourceSansLight,Vector2.new(9e9, 9e9))
				k.Text = h:sub(1, l)
				tweenService:Create(k, TweenInfo.new(0.01), {Size = UDim2.new(0, m.x + 30, 0, m.y + 10)}):Play()
				wait(0.03)
			end
			wait(j)
			k.Text = ""
			tweenService:Create(k, TweenInfo.new(0.2), {Size = UDim2.new(0, 0, 0, 0)}):Play()
			wait(0.2)
			k:Destroy()
		end
	)()
end
local function notify(o, h, i)
	coroutine.wrap(
		function()
			local p = Instance.new("TextLabel")
			p.Parent = f
			p.AnchorPoint = Vector2.new(0.5, 0.5)
			p.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			p.BorderSizePixel = 0
			p.Position = UDim2.new(0.5, 0, 0.5, 0)
			p.Size = UDim2.new(0, 0, 0, 30)
			p.Font = Enum.Font.SourceSansLight
			p.TextColor3 = Color3.fromRGB(0, 0, 0)
			p.TextSize = 20.000
			for l = 1, #o + 1 do
				local m =game:GetService("TextService"):GetTextSize(o:sub(1, l),20,Enum.Font.SourceSansLight,Vector2.new(9e9, 9e9))
				p.Text = o:sub(1, l)
				tweenService:Create(p, TweenInfo.new(0.01), {Size = UDim2.new(0, m.x + 30, 0, m.y + 10)}):Play()
				wait(.03)
			end
			wait(0.1)
			local q = Instance.new("Frame")
			q.Name = "Line"
			q.Parent = f
			q.AnchorPoint = Vector2.new(0.5, 0.5)
			q.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			q.BorderSizePixel = 0
			q.Position = UDim2.new(0.5, 0, 0.5, 0)
			q.Size = UDim2.new(0, 3, 0, 10)
			local k = Instance.new("TextLabel")
			k.Parent = f
			k.AnchorPoint = Vector2.new(0.5, 0.5)
			k.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			k.BorderSizePixel = 0
			k.Position = UDim2.new(0.5, 0, 0.5, 0)
			k.Size = UDim2.new(0, 0, 0, 30)
			k.Font = Enum.Font.SourceSansLight
			k.TextColor3 = Color3.fromRGB(0, 0, 0)
			k.TextSize = 20.000
			tweenService:Create(p, TweenInfo.new(0.4), {Position = p.Position - UDim2.new(0, 0, 0, 50)}):Play()
			wait(0.04)
			tweenService:Create(q, TweenInfo.new(0.4), {Size = UDim2.new(0, 3, 0, 20)}):Play()
			q.Position = q.Position - UDim2.new(0, 0, 0, 25)
			q.Visible = true
			wait(0.1)
			for l = 1, #h + 1 do
				local m =game:GetService("TextService"):GetTextSize(h:sub(1, l),20,Enum.Font.SourceSansLight,Vector2.new(9e9, 9e9))
				k.Text = h:sub(1, l)
				tweenService:Create(k, TweenInfo.new(0.01), {Size = UDim2.new(0, m.x + 30, 0, m.y + 10)}):Play()
				wait(.05)
			end
			i = i or 3
			wait(i)
			p.Text = ""
			k.Text = ""
			tweenService:Create(p, TweenInfo.new(0.2), {Size = UDim2.new(0, 0, 0, 0)}):Play()
			tweenService:Create(k, TweenInfo.new(0.2), {Size = UDim2.new(0, 0, 0, 0)}):Play()
			tweenService:Create(q, TweenInfo.new(0.2), {Size = UDim2.new(0, 0, 0, 0)}):Play()
			wait(0.2)
			p:Destroy()
			k:Destroy()
			q:Destroy()
		end
	)()
end
function getRemoteName(r)
	local s = {}
	pcall(
		function()
			local t = debug.getconstants(r)
			for l = 1, #t do
				local m = t[l]
				if typeof(m) == "string" and table.find(skywars.FULLREMOTENAMES, m) then
					table.insert(s, skywars.Events[m])
				end
			end
		end
	)
	return #s > 1 and s or #s == 1 and s[1] or nil
end
function hasItem(u)
	return skywars.inventoryController.hasItem(nil, u)
end
function getHoldItem()
	local v = skywars.HotbarController:getHeldItemInfo()
	return v and v.Name or nil
end
function IsAlive(w)
	if
		w.Character and w.Character:FindFirstChild("HumanoidRootPart") and w.Character:FindFirstChild("Humanoid") and
		w.Character.Humanoid.Health > 0
	then
		return true
	end
	return false
end
function magnitude(x, y, z)
	if typeof(x) == "Instance" and z then
		x = x.Character.HumanoidRootPart.Position
	end
	if typeof(y) == "Instance" and z then
		y = y.Character.HumanoidRootPart.Position
	end
	if typeof(x) == "Instance" and not z then
		x = x.Position
	end
	if typeof(y) == "Instance" and not z then
		y = y.Position
	end
	if typeof(x) == "CFrame" then
		x = x.p
	end
	if typeof(y) == "CFrame" then
		y = y.p
	end
	return (x - y).magnitude
end
function looptp(w)
	repeat
		if IsAlive(w) and IsAlive(localPlayer) then
			game:GetService("RunService").Heartbeat:Wait()
			game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
			if w and w.Character and w.Character:FindFirstChild("HumanoidRootPart") then
				localPlayer.Character.HumanoidRootPart.CFrame =
					w.Character.HumanoidRootPart.CFrame + w.Character.HumanoidRootPart.CFrame.LookVector * -3 -
					Vector3.new(0, 6, 0)
			end
		end
	until IsAlive(w) == false or IsAlive(localPlayer) == false or w.Character.HumanoidRootPart.Position.Y < -5
	g("Killed " .. w.Name)
end

repeat
	wait()
until IsAlive(localPlayer)
local F = tick()
notify("Autowin Started", "Made by Fern#5747 v" .. autoWinVersion)
queueonteleport("loadstring(game:HttpGet('https://raw.githubusercontent.com/bardium/random/main/skywarsautowin'))()")
local C = 0
repeat
	if workspace.BlockContainer.Map.Chests:FindFirstChild("ChestTierFour") then
		for _, chest in pairs(workspace.BlockContainer.Map.Chests:GetChildren()) do
			if chest.Name == "ChestTierFour" then
				if IsAlive(localPlayer) and chest:FindFirstChild("PrimaryPart") then
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = chest.PrimaryPart.CFrame + Vector3.new(0, 5, 0)
					task.wait(0.1)
					local ChestOpen
					local ChestStealer = {["Enabled"] = false}
					local ChestBlacklist = {}
					ChestOpen = skywars["EventHandler"][skywars["Events"].ChestController.onStart[1]]:connect(function(one, two, three)
						if ChestBlacklist[one] == nil then
							ChestBlacklist[one] = true
							for i,v in pairs(two) do
								skywars["EventHandler"][skywars["Events"].ChestController.updateChest[1]](one, v.Type, -v.Quantity)
							end
							skywars["EventHandler"][skywars["Events"].ChestController.closeChest[1]](one)
						end
					end)

					task.wait(0.3)
					C += 1
					if game.Players.LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid", true) then
						if chest.PrimaryPart then
							if (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - chest.PrimaryPart.Position).magnitude <= 10 and ChestBlacklist[chest] == nil then
								skywars["EventHandler"][skywars["Events"].ChestController.openChest[1]](chest)
							end
						end
					end
				end
			end
		end
	end

	task.wait()
until C >= 1
task.wait()

local G = {"Bronze", "Iron", "Gold", "Diamond", "Emerald", "Onyx"}
game:GetService("RunService").Heartbeat:Connect(function()
	for E, target in next, game.Players:GetPlayers() do
		if target ~= localPlayer and IsAlive(target) and IsAlive(localPlayer) and magnitude(target, localPlayer, 1) < 10 then
			local H = 1
			local function getSword()
				for i,v in ipairs(skywars["HotbarController"]:getHotbarItems()) do
					local item = skywars["ItemTable"][v.Type]
					if item.Melee then
						return item
					end
				end
				return nil
			end
			local function getHeldItem()
				local item = skywars["HotbarController"]:getHeldItemInfo()
				return item, item and item.Name or nil
			end
			local function equipItem(itemnam)
				skywars["EventHandler"][skywars["Events"].HotbarController.updateActiveItem[1]]:fire(itemnam)
			end
			local sword = getSword()
			local olditem, olditemname = getHeldItem()
			skywars["MeleeController"]:playAnimation(sword)
			if sword then
				for i,plr in pairs(game.Players:GetPlayers()) do
					equipItem(sword.Name)
					skywars["EventHandler"][skywars["Events"].MeleeController.strikeDesktop[1]]:fire(plr)
					equipItem(olditemname)
				end
			end
		end
	end
end)

local AlivePlayers = 0
repeat
	AlivePlayers = 0
	for E, target in next, game.Players:GetPlayers() do
		if target ~= localPlayer and IsAlive(target) then
			task.wait()
			AlivePlayers = AlivePlayers + 1
			looptp(target)
		end
	end
	wait()
until AlivePlayers == 0
notify("Game Ended", "Took - " .. math.floor(tick() - F) .. "s")
skywars.Remotes["MatchmakingController"]["joinQueue"]:fire(true)
